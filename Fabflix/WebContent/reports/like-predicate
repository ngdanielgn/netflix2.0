The query returns any record where the specified pattern is found in any part of the string 
for each field in the "movies" table. Search input strings are not tokenized. For example,
a user that enters "the cars" when searching for movie titles will not generate a query 
for LIKE '%the%' and a separate query for LIKE '%cars%'. The query will only find all 
records that match the pattern LIKE '%the cars%' so a movie titled "the red cars" 
will not result in a match.


source: FabflixModelJdbc.java
private String createSearchQuery(String title, String year, String director, 
							String firstName, String lastName) {
	/* 
	 * Dynamically generates mySQL query strings
	 * covering 120 (5!) possible search combinations. 
	 */
	
	String query = null;
	String[] argv = {title, year, director, firstName, lastName};
	String[] queries = {
			String.format("m.title LIKE '%%%s%%'", title),
			String.format("m.year = %s", year),
			String.format("m.director LIKE '%%%s%%'", director),
			String.format("s.first_name LIKE '%%%s%%' AND "
					+ "m.id = sim.movie_id AND s.id = sim.star_id", firstName),
			String.format("s.last_name LIKE '%%%s%%' AND "
					+ "m.id = sim.movie_id AND s.id = sim.star_id", lastName)
			};
	
	/* 
	 * Input values are null on initialization 
	 * but are "" after 'submit' button is pressed.
	 * Be aware that calling equalsIgnoreCase() on a 
	 * variable of type String that assigned to null
	 * will yield to a NullPointerException.
	 */
	if ((title == null && year == null && director == null 
			&& firstName == null && lastName == null) 
			|| (title.equalsIgnoreCase("") && year.equalsIgnoreCase("") 
			&& director.equalsIgnoreCase("") && firstName.equalsIgnoreCase("") 
			&& lastName.equalsIgnoreCase("")))
		return null;
	
	else if (firstName.equalsIgnoreCase("") && lastName.equalsIgnoreCase(""))
		query = "SELECT * "
				+ "FROM movies m "
				+ "WHERE ";
	else
		query = "SELECT m.id, m.title, m.year, m.director, "
				+ "m.banner_url, m.trailer_url "
				+ "FROM movies m, stars s, stars_in_movies sim "
				+ "WHERE ";
	
	boolean firstAttribute = true;
	for (int i = 0; i < argv.length; ++i) {
		if (!argv[i].equalsIgnoreCase("") && firstAttribute) {
			query += queries[i];
			firstAttribute = false;
		}
		else if (!argv[i].equalsIgnoreCase("")) {
			query += " AND " + queries[i];
		}
	}
			
	return query;
}